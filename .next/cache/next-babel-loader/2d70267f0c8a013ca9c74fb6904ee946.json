{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _initializerDefineProperty from \"@babel/runtime-corejs2/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"@babel/runtime-corejs2/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime-corejs2/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _temp;\n\nimport { observable } from \"mobx\";\nimport MoviesDataService from \"./MoviesDataService\";\nlet MovieStore = (_class = (_temp = class MovieStore {\n  constructor() {\n    _initializerDefineProperty(this, \"deneme\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"resultMovies\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"movieTitle\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"movieYear\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"movieType\", _descriptor5, this);\n\n    _initializerDefineProperty(this, \"favourites\", _descriptor6, this);\n\n    this.getMovies = e => {\n      e.preventDefault();\n      MoviesDataService.getSearchedMovies(this.movieTitle, this.movieYear, this.movieType).then(res => {\n        this.resultMovies = res.data.Search;\n      });\n    };\n  }\n\n  changeInput(e) {\n    if (e.target.id === \"movieName\") {\n      this.movieTitle = e.target.value;\n    } else if (e.target.id === \"movieYear\") {\n      this.movieYear = e.target.value;\n    } else {\n      this.movieType = e.target.value;\n    }\n  }\n\n  addToFavourites(index) {\n    let movieToAdd = this.resultMovies[index];\n    let newFavorites = [...this.favourites, movieToAdd];\n    this.favourites = newFavorites;\n    localStorage.setItem(\"favoriler\", _JSON$stringify(newFavorites));\n  }\n\n  component_did_mount() {\n    this.favourites = JSON.parse(localStorage.getItem(\"favoriler\"));\n  }\n\n  changeDeneme(value) {\n    console.log(value);\n    this.deneme = value;\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"deneme\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return \"deneme\";\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"resultMovies\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"movieTitle\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return \"\";\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"movieYear\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return null;\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"movieType\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return \"movie\";\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"favourites\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n})), _class);\nexport default new MovieStore();","map":{"version":3,"sources":["C:/Users/Admin/Desktop/90pixel - Kopya (2)/components/Store.js"],"names":["observable","MoviesDataService","MovieStore","getMovies","e","preventDefault","getSearchedMovies","movieTitle","movieYear","movieType","then","res","resultMovies","data","Search","changeInput","target","id","value","addToFavourites","index","movieToAdd","newFavorites","favourites","localStorage","setItem","component_did_mount","JSON","parse","getItem","changeDeneme","console","log","deneme"],"mappings":";;;;;;;AAAA,SAASA,UAAT,QAA2B,MAA3B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;IAEMC,U,sBAAN,MAAMA,UAAN,CAAiB;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,SAQfC,SARe,GAQHC,CAAC,IAAI;AACfA,MAAAA,CAAC,CAACC,cAAF;AACAJ,MAAAA,iBAAiB,CAACK,iBAAlB,CACE,KAAKC,UADP,EAEE,KAAKC,SAFP,EAGE,KAAKC,SAHP,EAIEC,IAJF,CAIOC,GAAG,IAAI;AACZ,aAAKC,YAAL,GAAoBD,GAAG,CAACE,IAAJ,CAASC,MAA7B;AACD,OAND;AAOD,KAjBc;AAAA;;AAmBfC,EAAAA,WAAW,CAACX,CAAD,EAAI;AACb,QAAIA,CAAC,CAACY,MAAF,CAASC,EAAT,KAAgB,WAApB,EAAiC;AAC/B,WAAKV,UAAL,GAAkBH,CAAC,CAACY,MAAF,CAASE,KAA3B;AACD,KAFD,MAEO,IAAId,CAAC,CAACY,MAAF,CAASC,EAAT,KAAgB,WAApB,EAAiC;AACtC,WAAKT,SAAL,GAAiBJ,CAAC,CAACY,MAAF,CAASE,KAA1B;AACD,KAFM,MAEA;AACL,WAAKT,SAAL,GAAiBL,CAAC,CAACY,MAAF,CAASE,KAA1B;AACD;AACF;;AAEDC,EAAAA,eAAe,CAACC,KAAD,EAAQ;AACrB,QAAIC,UAAU,GAAG,KAAKT,YAAL,CAAkBQ,KAAlB,CAAjB;AACA,QAAIE,YAAY,GAAG,CAAC,GAAG,KAAKC,UAAT,EAAqBF,UAArB,CAAnB;AACA,SAAKE,UAAL,GAAkBD,YAAlB;AACAE,IAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkC,gBAAeH,YAAf,CAAlC;AACD;;AAEDI,EAAAA,mBAAmB,GAAG;AACpB,SAAKH,UAAL,GAAkBI,IAAI,CAACC,KAAL,CAAWJ,YAAY,CAACK,OAAb,CAAqB,WAArB,CAAX,CAAlB;AACD;;AAEDC,EAAAA,YAAY,CAACZ,KAAD,EAAQ;AAClBa,IAAAA,OAAO,CAACC,GAAR,CAAYd,KAAZ;AACA,SAAKe,MAAL,GAAcf,KAAd;AACD;;AA3Cc,C,gFACdlB,U;;;;;WAAoB,Q;;gFACpBA,U;;;;;WAA0B,E;;8EAC1BA,U;;;;;WAAwB,E;;6EACxBA,U;;;;;WAAuB,I;;6EACvBA,U;;;;;WAAuB,O;;8EACvBA,U;;;;;WAAwB,E;;;AAwC3B,eAAe,IAAIE,UAAJ,EAAf","sourcesContent":["import { observable } from \"mobx\";\r\nimport MoviesDataService from \"./MoviesDataService\";\r\n\r\nclass MovieStore {\r\n  @observable deneme = \"deneme\";\r\n  @observable resultMovies = [];\r\n  @observable movieTitle = \"\";\r\n  @observable movieYear = null;\r\n  @observable movieType = \"movie\";\r\n  @observable favourites = [];\r\n\r\n  getMovies = e => {\r\n    e.preventDefault();\r\n    MoviesDataService.getSearchedMovies(\r\n      this.movieTitle,\r\n      this.movieYear,\r\n      this.movieType\r\n    ).then(res => {\r\n      this.resultMovies = res.data.Search;\r\n    });\r\n  };\r\n\r\n  changeInput(e) {\r\n    if (e.target.id === \"movieName\") {\r\n      this.movieTitle = e.target.value;\r\n    } else if (e.target.id === \"movieYear\") {\r\n      this.movieYear = e.target.value;\r\n    } else {\r\n      this.movieType = e.target.value;\r\n    }\r\n  }\r\n\r\n  addToFavourites(index) {\r\n    let movieToAdd = this.resultMovies[index];\r\n    let newFavorites = [...this.favourites, movieToAdd];\r\n    this.favourites = newFavorites;\r\n    localStorage.setItem(\"favoriler\", JSON.stringify(newFavorites));\r\n  }\r\n\r\n  component_did_mount() {\r\n    this.favourites = JSON.parse(localStorage.getItem(\"favoriler\"));\r\n  }\r\n\r\n  changeDeneme(value) {\r\n    console.log(value);\r\n    this.deneme = value;\r\n  }\r\n}\r\n\r\nexport default new MovieStore();\r\n"]},"metadata":{},"sourceType":"module"}