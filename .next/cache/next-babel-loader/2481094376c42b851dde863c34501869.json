{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _initializerDefineProperty from \"@babel/runtime-corejs2/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _applyDecoratedDescriptor from \"@babel/runtime-corejs2/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime-corejs2/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _temp;\n\nimport { observable } from \"mobx\";\nimport MoviesDataService from \"./MoviesDataService\";\nvar MovieStore = (_class = (_temp =\n/*#__PURE__*/\nfunction () {\n  function MovieStore() {\n    var _this = this;\n\n    _classCallCheck(this, MovieStore);\n\n    _initializerDefineProperty(this, \"resultMovies\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"movieTitle\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"movieYear\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"movieType\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"favourites\", _descriptor5, this);\n\n    this.getMovies = function (e) {\n      e.preventDefault();\n      MoviesDataService.getSearchedMovies(_this.movieTitle, _this.movieYear, _this.movieType).then(function (res) {\n        _this.resultMovies = res.data.Search;\n      });\n    };\n  }\n\n  _createClass(MovieStore, [{\n    key: \"changeInput\",\n    value: function changeInput(value, id) {\n      if (id === \"movieName\") {\n        this.movieTitle = value;\n      } else if (id === \"movieYear\") {\n        this.movieYear = value;\n      } else {\n        this.movieType = value;\n      }\n\n      console.log(this.favourites);\n    }\n  }, {\n    key: \"addToFavourites\",\n    value: function addToFavourites(index) {\n      var movieToAdd = this.resultMovies[index];\n      this.favourites.push(movieToAdd);\n      localStorage.setItem(\"favoriler\", _JSON$stringify(this.favourites));\n    }\n  }, {\n    key: \"component_did_mount\",\n    value: function component_did_mount() {\n      if (localStorage.getItem(\"favoriler\")) {\n        this.favourites = JSON.parse(localStorage.getItem(\"favoriler\"));\n      }\n    }\n  }]);\n\n  return MovieStore;\n}(), _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"resultMovies\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"movieTitle\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return \"\";\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"movieYear\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return null;\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"movieType\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return \"movie\";\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"favourites\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n})), _class);\nexport default new MovieStore();","map":{"version":3,"sources":["C:/Users/Admin/Desktop/90pixel - Kopya (2)/components/Store.js"],"names":["observable","MoviesDataService","MovieStore","getMovies","e","preventDefault","getSearchedMovies","movieTitle","movieYear","movieType","then","res","resultMovies","data","Search","value","id","console","log","favourites","index","movieToAdd","push","localStorage","setItem","getItem","JSON","parse"],"mappings":";;;;;;;;;AAAA,SAASA,UAAT,QAA2B,MAA3B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;IAEMC,U;;;;;;;;;;;;;;;;;;SAOJC,S,GAAY,UAAAC,CAAC,EAAI;AACfA,MAAAA,CAAC,CAACC,cAAF;AAEAJ,MAAAA,iBAAiB,CAACK,iBAAlB,CACE,KAAI,CAACC,UADP,EAEE,KAAI,CAACC,SAFP,EAGE,KAAI,CAACC,SAHP,EAIEC,IAJF,CAIO,UAAAC,GAAG,EAAI;AACZ,QAAA,KAAI,CAACC,YAAL,GAAoBD,GAAG,CAACE,IAAJ,CAASC,MAA7B;AACD,OAND;AAOD,K;;;;;gCACWC,K,EAAOC,E,EAAI;AACrB,UAAIA,EAAE,KAAK,WAAX,EAAwB;AACtB,aAAKT,UAAL,GAAkBQ,KAAlB;AACD,OAFD,MAEO,IAAIC,EAAE,KAAK,WAAX,EAAwB;AAC7B,aAAKR,SAAL,GAAiBO,KAAjB;AACD,OAFM,MAEA;AACL,aAAKN,SAAL,GAAiBM,KAAjB;AACD;;AACDE,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,UAAjB;AACD;;;oCACeC,K,EAAO;AACrB,UAAIC,UAAU,GAAG,KAAKT,YAAL,CAAkBQ,KAAlB,CAAjB;AACA,WAAKD,UAAL,CAAgBG,IAAhB,CAAqBD,UAArB;AACAE,MAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkC,gBAAe,KAAKL,UAApB,CAAlC;AACD;;;0CACqB;AACpB,UAAII,YAAY,CAACE,OAAb,CAAqB,WAArB,CAAJ,EAAuC;AACrC,aAAKN,UAAL,GAAkBO,IAAI,CAACC,KAAL,CAAWJ,YAAY,CAACE,OAAb,CAAqB,WAArB,CAAX,CAAlB;AACD;AACF;;;;yFApCAzB,U;;;;;WAA0B,E;;8EAC1BA,U;;;;;WAAwB,E;;6EACxBA,U;;;;;WAAuB,I;;6EACvBA,U;;;;;WAAuB,O;;8EACvBA,U;;;;;WAAwB,E;;;AAmC3B,eAAe,IAAIE,UAAJ,EAAf","sourcesContent":["import { observable } from \"mobx\";\r\nimport MoviesDataService from \"./MoviesDataService\";\r\n\r\nclass MovieStore {\r\n  @observable resultMovies = [];\r\n  @observable movieTitle = \"\";\r\n  @observable movieYear = null;\r\n  @observable movieType = \"movie\";\r\n  @observable favourites = [];\r\n\r\n  getMovies = e => {\r\n    e.preventDefault();\r\n\r\n    MoviesDataService.getSearchedMovies(\r\n      this.movieTitle,\r\n      this.movieYear,\r\n      this.movieType\r\n    ).then(res => {\r\n      this.resultMovies = res.data.Search;\r\n    });\r\n  };\r\n  changeInput(value, id) {\r\n    if (id === \"movieName\") {\r\n      this.movieTitle = value;\r\n    } else if (id === \"movieYear\") {\r\n      this.movieYear = value;\r\n    } else {\r\n      this.movieType = value;\r\n    }\r\n    console.log(this.favourites);\r\n  }\r\n  addToFavourites(index) {\r\n    let movieToAdd = this.resultMovies[index];\r\n    this.favourites.push(movieToAdd);\r\n    localStorage.setItem(\"favoriler\", JSON.stringify(this.favourites));\r\n  }\r\n  component_did_mount() {\r\n    if (localStorage.getItem(\"favoriler\")) {\r\n      this.favourites = JSON.parse(localStorage.getItem(\"favoriler\"));\r\n    }\r\n  }\r\n}\r\n\r\nexport default new MovieStore();\r\n"]},"metadata":{},"sourceType":"module"}